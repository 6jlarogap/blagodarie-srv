# Generated by Django 3.2.6 on 2021-10-14 11:02

from django.db import migrations, connection

def reverse_it(apps, schema_editor):
    pass

def operation(apps, schema_editor):
    ops = """
        create temp table if not exists tmp_parent(
            level int,
            user_from_id int,
            user_to_id int,
            thanks_count int,
            is_trust boolean,
            is_parent boolean,
            is_child boolean
        ) ON COMMIT delete rows;

        create index if not exists idx_tmp_parent_1 on tmp_parent(level);

        create index if not exists idx_tmp_parent_2 on tmp_parent(user_from_id);

        create index if not exists idx_tmp_parent_3 on tmp_parent(user_to_id);

        create unlogged table if not exists template_tmp_parent (like tmp_parent);
    """
    print('create and set template_tmp_parent table')
    for op in ops.split("\n\n"):
        sql = op.strip()
        print('Preform Postgresql command:\n', sql)
        with connection.cursor() as cursor:
            result = cursor.execute(sql)
    print('Fill currentstate.is_parent, is_child')
    CurrentState = apps.get_model('contact', 'CurrentState')
    pks = [cs.pk for cs in CurrentState.objects.filter(is_parent=True).distinct()]
    for cs in CurrentState.objects.filter(pk__in=pks):
        if cs.is_reverse:
            cs.is_parent = False
            cs.is_child = True
            cs.save()
        else:
            reverse_cs, reverse_cs_created = CurrentState.objects.get_or_create(
                user_from=cs.user_to, user_to=cs.user_from, defaults=dict(
                    is_reverse=True,
                    is_parent=False,
                    is_child=True,
            ))
            if not reverse_cs_created:
                reverse_cs.is_child=True
                reverse_cs.is_parent = False
                reverse_cs.save()
    print('OK')

class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0057_auto_20211014_1059'),
    ]

    operations = [
        migrations.RunPython(operation, reverse_it),
    ]
