# Generated by Django 3.2.6 on 2022-06-11 15:16

from django.db import migrations, connection


def reverse_it(apps, schema_editor):
    pass

def operation(apps, schema_editor):
    ops = [
'''create or replace function find_trust_relation_path(
    v_user_from_id int,
    v_user_to_id int,
    v_level int
) returns setof template_tmp_links as 
$$
declare 
    i int := 1; 
begin 
    if v_level <= 0 then 
        raise notice 'level must >= 1'; 
        return; 
    end if; 
  
    create temp table if not exists tmp_links(
        level int,
        path int[],
        user_from_id int,
        user_to_id int
    ) ON COMMIT delete rows;
    create index if not exists idx_tmp_links_1 on tmp_links(level);
    create index if not exists idx_tmp_links_2 on tmp_links(user_from_id);
    create index if not exists idx_tmp_links_3 on tmp_links(user_to_id);

    return query
        insert into tmp_links
            select
                i,
                array[]::int[] || user_from_id || user_to_id,
                user_from_id,
                user_to_id
            from
                contact_currentstate
            where
                user_from_id = v_user_from_id and
                contact_currentstate.is_trust and
                user_to_id is not null
    returning *; 

    loop
        i := i + 1; 
        if i > v_level then
            return;
        end if; 

        if exists (
            select
                1
            from
                tmp_links
            where
                user_to_id = v_user_to_id and
                level = i - 1
        ) then
            return;
        end if;

        return query
            insert into tmp_links
                select
                    i,
                    tmp.path || contact_currentstate.user_to_id,
                    contact_currentstate.user_from_id,
                    contact_currentstate.user_to_id
                from
                    contact_currentstate
                join
                    (select user_to_id, path from tmp_links where level = i - 1)
                tmp on
                    (contact_currentstate.user_from_id = tmp.user_to_id)
                where
                    contact_currentstate.user_to_id is not null and
                    contact_currentstate.is_trust and
                    not exists (
                        select
                            1
                        from
                            tmp_links
                        where
                            contact_currentstate.user_from_id = tmp_links.user_from_id
                    )
        returning *; 
    end loop; 
end;
$$
    language plpgsql strict
''',
    ]
    print('')
    for i, op in enumerate(ops):
        sql = op.strip()
        print('Perform Postgresql command, number: %s' % i)
        with connection.cursor() as cursor:
            cursor.execute(sql)


class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0074_data_func_find_trust'),
    ]

    operations = [
        migrations.RunPython(operation, reverse_it),
    ]
