# Generated by Django 3.2.6 on 2022-06-11 12:01

from django.db import migrations, connection

def reverse_it(apps, schema_editor):
    pass

def operation(apps, schema_editor):
    ops = [
'''create temp table if not exists tmp_trust(
    level int,
    user_from_id int,
    user_to_id int,
    thanks_count int,
    is_trust boolean,
    is_reverse boolean
) ON COMMIT delete rows
''',
'create index if not exists idx_tmp_trust_1 on tmp_trust(level)',
'create index if not exists idx_tmp_trust_2 on tmp_trust(user_from_id)',
'create index if not exists idx_tmp_trust_3 on tmp_trust(user_to_id)',
'create unlogged table if not exists template_tmp_trust (like tmp_trust)',
'''
create or replace function find_rel_trust(
    v_user_from_id int,
    v_level int
) returns setof template_tmp_trust as 
$$

-- Дерево доверий, начиная с пользователя v_user_from_id
--  v_level:
--      максимальное число итераций при проходе по дереву связей
--

declare 
    i int := 1;
begin 
    if v_level <= 0 then 
        raise notice 'level must >= 1'; 
        return; 
    end if; 
  
    create temp table if not exists tmp_trust(
        level int,
        user_from_id int,
        user_to_id int,
        thanks_count int,
        is_trust boolean,
        is_reverse boolean
    ) ON COMMIT delete rows;
    create index if not exists idx_tmp_trust_1 on tmp_trust(level);
    create index if not exists idx_tmp_trust_2 on tmp_trust(user_from_id);
    create index if not exists idx_tmp_trust_3 on tmp_trust(user_to_id);

    return query 
        insert into tmp_trust
            select
                i,
                user_from_id,
                user_to_id,
                thanks_count,
                is_trust,
                is_reverse
            from
                contact_currentstate
            where
                user_from_id=v_user_from_id and
                contact_currentstate.is_trust and
                user_to_id is not null
    returning *;

    loop
        i := i+1; 

        -- All levels of data has been found
        if i > v_level then
            return;
        end if; 

        -- The next level relation is derived though a join with level=i-1
        -- (Group By excludes duplicate nodes.
        -- For example, 3 in 1-2-3-4 and 1-5-3-4 is excluded),
        -- and the looping points are excluded by not exists.
        --
        return query 
            insert into tmp_trust
                select
                    i,
                    contact_currentstate.user_from_id,
                    contact_currentstate.user_to_id,
                    contact_currentstate.thanks_count,
                    contact_currentstate.is_trust,
                    contact_currentstate.is_reverse
                from
                    contact_currentstate
                join
                    (select user_to_id from tmp_trust where level = i - 1 group by user_to_id)
                tmp on
                    (contact_currentstate.user_from_id = tmp.user_to_id)
                where
                    contact_currentstate.user_to_id is not null and
                    contact_currentstate.is_trust and
                not exists (
                    select 1 from tmp_trust where contact_currentstate.user_from_id = tmp_trust.user_from_id
                )
        returning *;
  end loop; 
end;

$$
    language plpgsql strict
''',
    ]
    print('')
    for i, op in enumerate(ops):
        sql = op.strip()
        print('Perform Postgresql command, number: %s' % i)
        with connection.cursor() as cursor:
            cursor.execute(sql)

class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0073_tgmessagejournal'),
    ]

    operations = [
        migrations.RunPython(operation, reverse_it),
    ]
