# Generated by Django 3.2.6 on 2021-12-07 15:34

from django.db import migrations, connection

def reverse_it(apps, schema_editor):
    pass

def operation(apps, schema_editor):
    ops = """
create temp table tmp_links(
    level int,
    path int[],
    user_from_id int,
    user_to_id int
) ON COMMIT delete rows;
\f
create unlogged table if not exists template_tmp_links (like tmp_links);
\f
create or replace function find_links_among(v_user_from_id int[], v_level int) returns setof template_tmp_links as 
$$
declare 
    i int := 1; 
begin 
    if v_level <= 0 then 
        raise notice 'level must >= 1'; 
        return; 
    end if; 
  
    create temp table if not exists tmp_links(
        level int,
        path int[],
        user_from_id int,
        user_to_id int
    ) ON COMMIT delete rows;
    create index if not exists idx_tmp_links_1 on tmp_links(level);
    create index if not exists idx_tmp_links_2 on tmp_links(user_from_id);
    create index if not exists idx_tmp_links_3 on tmp_links(user_to_id);

    return query
        insert into tmp_links
            select
                i,
                array[]::int[] || user_from_id || user_to_id,
                user_from_id,
                user_to_id
            from
                contact_currentstate
            where
                user_from_id = ANY(v_user_from_id) and
                (
                    contact_currentstate.is_father or
                    contact_currentstate.is_mother or
                    contact_currentstate.is_trust is not null
                ) and
                user_to_id is not null and
                user_from_id = ANY(v_user_from_id)
            returning *; 

    loop
        i := i+1; 
        if i > v_level then
            return;
        end if; 

        return query
            insert into tmp_links
                select
                    i,
                    tmp.path || contact_currentstate.user_to_id,
                    contact_currentstate.user_from_id,
                    contact_currentstate.user_to_id
                from
                    contact_currentstate
                join
                    (select user_to_id, path from tmp_links where level = i - 1)
                tmp on
                    (contact_currentstate.user_from_id = tmp.user_to_id)
                where
                    contact_currentstate.user_to_id is not null and (
                        contact_currentstate.is_father or
                        contact_currentstate.is_mother or
                        contact_currentstate.is_trust is not null
                    ) and
                    not exists (
                        select 1 from tmp_links where contact_currentstate.user_from_id = tmp_links.user_from_id
                    )
        returning *; 
    end loop; 
end;
$$
    language plpgsql strict;
    """
    print('\nCreate template teble and function for find links among users')
    for op in ops.split("\n\f\n"):
        sql = op.strip()
        with connection.cursor() as cursor:
            cursor.execute(sql)

class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0068_templatetmplinks'),
    ]

    operations = [
        migrations.RunPython(operation, reverse_it),
    ]
